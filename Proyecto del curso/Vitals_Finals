{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1gLVWqqiCTSqRPbSPZZ3hTNFIym5cggIu","timestamp":1720218806243}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Descargo los archivos"],"metadata":{"id":"PasShAf_x4z5"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z-JvhElavIDy","executionInfo":{"status":"ok","timestamp":1728659233821,"user_tz":300,"elapsed":44206,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"cebf7fb8-709a-4e10-bbf6-b789d68d1f77"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://drive.google.com/uc?id=1dJYqX6LryQcYUYPm6BDOb7Nrw2fK8vPg\n","To: /content/operations.csv\n","100% 16.3M/16.3M [00:00<00:00, 57.2MB/s]\n","Downloading...\n","From: https://drive.google.com/uc?id=1DawTQLJzLGkSWsvfuE2w-p6LMmmpqSjd\n","To: /content/diagnosis.csv\n","100% 53.6M/53.6M [00:00<00:00, 58.7MB/s]\n","Downloading...\n","From (original): https://drive.google.com/uc?id=1Smo1dxHfpj5jFJioSOvy49F8Hd9UL8qC\n","From (redirected): https://drive.google.com/uc?id=1Smo1dxHfpj5jFJioSOvy49F8Hd9UL8qC&confirm=t&uuid=627096b8-d6fd-44b0-8d48-d7925fe35417\n","To: /content/vitals.csv\n","100% 2.43G/2.43G [00:27<00:00, 87.2MB/s]\n"]}],"source":["#Descargo los valores de operation\n","\n","!gdown 1dJYqX6LryQcYUYPm6BDOb7Nrw2fK8vPg\n","\n","#Descargo los valores de diagnostics\n","\n","!gdown 1DawTQLJzLGkSWsvfuE2w-p6LMmmpqSjd\n","\n","#Descargo los valores de vitals\n","!gdown 1Smo1dxHfpj5jFJioSOvy49F8Hd9UL8qC"]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np"],"metadata":{"id":"halxRy5YxyL9","executionInfo":{"status":"ok","timestamp":1728659276940,"user_tz":300,"elapsed":688,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["vi_data = pd.read_csv(\"vitals.csv\")\n","#vi_data\n","ope_data = pd.read_csv(\"operations.csv\")\n","#ope_data\n","di_data=pd.read_csv(\"diagnosis.csv\")"],"metadata":{"id":"gPrRR--9x0Sk","executionInfo":{"status":"ok","timestamp":1728659332560,"user_tz":300,"elapsed":53042,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["#158995752 es un paciente con operacion 0WJG0\n","paciente_pro=ope_data[ope_data['icd10_pcs'] =='0WJG0']\n","\n","pacientes=paciente_pro['op_id']\n","\n","\n","pacientes_mod=pacientes.unique()\n","\n","len(pacientes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9XyzbhWCx8lS","executionInfo":{"status":"ok","timestamp":1728659338194,"user_tz":300,"elapsed":452,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"0493b3a4-9d14-4b99-dfaa-0853f54ce236"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1314"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["paciente_pro"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"LbCcv2-6Th4z","executionInfo":{"status":"ok","timestamp":1728659340547,"user_tz":300,"elapsed":378,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"c2156dd7-a0ae-41d6-e1c4-43dd08d6296f"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            op_id  subject_id    hadm_id  case_id   opdate  age sex  weight  \\\n","1       446270725   158995752  257857903      NaN        0   70   M    43.0   \n","35      452566478   158995752  257857903      NaN     2880   70   M    43.0   \n","52      440391574   192250700  291434429      NaN     1440   65   F    59.0   \n","123     411634952   121041674  275074982      NaN     2880   60   F    43.0   \n","143     442167773   144893612  280737012      NaN        0   40   M    63.0   \n","...           ...         ...        ...      ...      ...  ...  ..     ...   \n","110945  487618002   186132074  263817440 -25472.0     1440   80   F    49.0   \n","112059  416006595   192891843  216410186 -22950.0     1440   50   F    64.0   \n","112280  428282025   173675824  270574460 -23122.0     1440   25   F    75.0   \n","114063  496198262   178121234  243505343 -18019.0  2350080   70   M    60.0   \n","121644  416505832   173926023  278259675      NaN     1440   45   F    49.0   \n","\n","        height   race  ...  opend_time  admission_time discharge_time  \\\n","1        168.0  Asian  ...      1540.0               0          70555   \n","35       174.0  Asian  ...      4015.0               0          70555   \n","52       163.0  Asian  ...      2740.0               0          31675   \n","123      157.0  Asian  ...      3460.0               0          11515   \n","143      174.0  Asian  ...       450.0               0          12955   \n","...        ...    ...  ...         ...             ...            ...   \n","110945   146.0  Asian  ...      2330.0               0          14395   \n","112059   158.0  Asian  ...      2375.0               0          10075   \n","112280   160.0  Asian  ...      2145.0               0           8635   \n","114063   158.0  Asian  ...   2350960.0         2347200        2358715   \n","121644   159.0  Asian  ...      2375.0               0          10075   \n","\n","       anstart_time anend_time  cpbon_time  cpboff_time  icuin_time  \\\n","1            1345.0     1540.0         NaN          NaN      1550.0   \n","35           3830.0     4020.0         NaN          NaN      1550.0   \n","52           2355.0     2735.0         NaN          NaN      2750.0   \n","123          3365.0     3465.0         NaN          NaN         NaN   \n","143           270.0      445.0         NaN          NaN       460.0   \n","...             ...        ...         ...          ...         ...   \n","110945       2170.0     2355.0         NaN          NaN         NaN   \n","112059       2265.0     2380.0         NaN          NaN         NaN   \n","112280       2030.0     2145.0         NaN          NaN         NaN   \n","114063    2350710.0  2350965.0         NaN          NaN         NaN   \n","121644       2255.0     2380.0         NaN          NaN         NaN   \n","\n","        icuout_time  inhosp_death_time  \n","1           19595.0            69860.0  \n","35          19595.0            69860.0  \n","52           5095.0                NaN  \n","123             NaN                NaN  \n","143          2390.0                NaN  \n","...             ...                ...  \n","110945          NaN                NaN  \n","112059          NaN                NaN  \n","112280          NaN                NaN  \n","114063          NaN                NaN  \n","121644          NaN                NaN  \n","\n","[1314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-b26f0ac9-ff27-4c9c-acd0-a1369b5b3010\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>op_id</th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>case_id</th>\n","      <th>opdate</th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>weight</th>\n","      <th>height</th>\n","      <th>race</th>\n","      <th>...</th>\n","      <th>opend_time</th>\n","      <th>admission_time</th>\n","      <th>discharge_time</th>\n","      <th>anstart_time</th>\n","      <th>anend_time</th>\n","      <th>cpbon_time</th>\n","      <th>cpboff_time</th>\n","      <th>icuin_time</th>\n","      <th>icuout_time</th>\n","      <th>inhosp_death_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>257857903</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>43.0</td>\n","      <td>168.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>1540.0</td>\n","      <td>0</td>\n","      <td>70555</td>\n","      <td>1345.0</td>\n","      <td>1540.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1550.0</td>\n","      <td>19595.0</td>\n","      <td>69860.0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>452566478</td>\n","      <td>158995752</td>\n","      <td>257857903</td>\n","      <td>NaN</td>\n","      <td>2880</td>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>43.0</td>\n","      <td>174.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>4015.0</td>\n","      <td>0</td>\n","      <td>70555</td>\n","      <td>3830.0</td>\n","      <td>4020.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1550.0</td>\n","      <td>19595.0</td>\n","      <td>69860.0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>440391574</td>\n","      <td>192250700</td>\n","      <td>291434429</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>65</td>\n","      <td>F</td>\n","      <td>59.0</td>\n","      <td>163.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2740.0</td>\n","      <td>0</td>\n","      <td>31675</td>\n","      <td>2355.0</td>\n","      <td>2735.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2750.0</td>\n","      <td>5095.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>411634952</td>\n","      <td>121041674</td>\n","      <td>275074982</td>\n","      <td>NaN</td>\n","      <td>2880</td>\n","      <td>60</td>\n","      <td>F</td>\n","      <td>43.0</td>\n","      <td>157.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>3460.0</td>\n","      <td>0</td>\n","      <td>11515</td>\n","      <td>3365.0</td>\n","      <td>3465.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>442167773</td>\n","      <td>144893612</td>\n","      <td>280737012</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>63.0</td>\n","      <td>174.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>450.0</td>\n","      <td>0</td>\n","      <td>12955</td>\n","      <td>270.0</td>\n","      <td>445.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>460.0</td>\n","      <td>2390.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>110945</th>\n","      <td>487618002</td>\n","      <td>186132074</td>\n","      <td>263817440</td>\n","      <td>-25472.0</td>\n","      <td>1440</td>\n","      <td>80</td>\n","      <td>F</td>\n","      <td>49.0</td>\n","      <td>146.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2330.0</td>\n","      <td>0</td>\n","      <td>14395</td>\n","      <td>2170.0</td>\n","      <td>2355.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>112059</th>\n","      <td>416006595</td>\n","      <td>192891843</td>\n","      <td>216410186</td>\n","      <td>-22950.0</td>\n","      <td>1440</td>\n","      <td>50</td>\n","      <td>F</td>\n","      <td>64.0</td>\n","      <td>158.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2375.0</td>\n","      <td>0</td>\n","      <td>10075</td>\n","      <td>2265.0</td>\n","      <td>2380.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>112280</th>\n","      <td>428282025</td>\n","      <td>173675824</td>\n","      <td>270574460</td>\n","      <td>-23122.0</td>\n","      <td>1440</td>\n","      <td>25</td>\n","      <td>F</td>\n","      <td>75.0</td>\n","      <td>160.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2145.0</td>\n","      <td>0</td>\n","      <td>8635</td>\n","      <td>2030.0</td>\n","      <td>2145.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>114063</th>\n","      <td>496198262</td>\n","      <td>178121234</td>\n","      <td>243505343</td>\n","      <td>-18019.0</td>\n","      <td>2350080</td>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>60.0</td>\n","      <td>158.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2350960.0</td>\n","      <td>2347200</td>\n","      <td>2358715</td>\n","      <td>2350710.0</td>\n","      <td>2350965.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>121644</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>278259675</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>45</td>\n","      <td>F</td>\n","      <td>49.0</td>\n","      <td>159.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2375.0</td>\n","      <td>0</td>\n","      <td>10075</td>\n","      <td>2255.0</td>\n","      <td>2380.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b26f0ac9-ff27-4c9c-acd0-a1369b5b3010')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b26f0ac9-ff27-4c9c-acd0-a1369b5b3010 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b26f0ac9-ff27-4c9c-acd0-a1369b5b3010');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-43dd65be-652f-4f3d-b1bf-6de717edf322\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43dd65be-652f-4f3d-b1bf-6de717edf322')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-43dd65be-652f-4f3d-b1bf-6de717edf322 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2b41199d-51d4-411e-b5b6-b4f69305bb64\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('paciente_pro')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2b41199d-51d4-411e-b5b6-b4f69305bb64 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('paciente_pro');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"paciente_pro"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["frame=[]\n","for valor in pacientes_mod:\n","  fila=vi_data[vi_data['op_id']==valor]\n","  frame.append(fila)\n","\n","vi_pac = pd.concat(frame)"],"metadata":{"id":"WenZeaUZT8lI","executionInfo":{"status":"ok","timestamp":1728659523412,"user_tz":300,"elapsed":180626,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["vi_pac"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"yGfGEzdhU7kb","executionInfo":{"status":"ok","timestamp":1728659526821,"user_tz":300,"elapsed":402,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"fe8736ac-f72d-48ce-a3c9-3eb7a2ee8b10"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              op_id  subject_id  chart_time item_name  value\n","22764380  446270725   158995752        1350        rr    3.5\n","22764381  446270725   158995752        1355        rr   12.0\n","22764382  446270725   158995752        1360        rr    9.0\n","22764383  446270725   158995752        1365        rr   14.0\n","22764384  446270725   158995752        1370        rr   12.0\n","...             ...         ...         ...       ...    ...\n","60047198  416505832   173926023        2380        vt  160.0\n","60047199  416505832   173926023        2380       pip    1.0\n","60047200  416505832   173926023        2380     pmean    0.0\n","60047201  416505832   173926023        2380      peep    1.0\n","60047202  416505832   173926023        2380        rr    9.0\n","\n","[963503 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-cd2e958f-f9f7-4026-9cf5-c3512c1eb141\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>op_id</th>\n","      <th>subject_id</th>\n","      <th>chart_time</th>\n","      <th>item_name</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22764380</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>1350</td>\n","      <td>rr</td>\n","      <td>3.5</td>\n","    </tr>\n","    <tr>\n","      <th>22764381</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>1355</td>\n","      <td>rr</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>22764382</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>1360</td>\n","      <td>rr</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>22764383</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>1365</td>\n","      <td>rr</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>22764384</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>1370</td>\n","      <td>rr</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>60047198</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>2380</td>\n","      <td>vt</td>\n","      <td>160.0</td>\n","    </tr>\n","    <tr>\n","      <th>60047199</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>2380</td>\n","      <td>pip</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>60047200</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>2380</td>\n","      <td>pmean</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>60047201</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>2380</td>\n","      <td>peep</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>60047202</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>2380</td>\n","      <td>rr</td>\n","      <td>9.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>963503 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd2e958f-f9f7-4026-9cf5-c3512c1eb141')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd2e958f-f9f7-4026-9cf5-c3512c1eb141 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd2e958f-f9f7-4026-9cf5-c3512c1eb141');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c48e8fd8-13fb-4123-90f8-d4f7ca631c3a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c48e8fd8-13fb-4123-90f8-d4f7ca631c3a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c48e8fd8-13fb-4123-90f8-d4f7ca631c3a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_957071fc-a30f-4803-a040-c344a2369b6a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('vi_pac')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_957071fc-a30f-4803-a040-c344a2369b6a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('vi_pac');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"vi_pac"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["\n","# Contar la frecuencia de cada item_name\n","item_counts = vi_pac['item_name'].value_counts()\n","\n","# Crear el histograma\n","plt.figure(figsize=(25, 8))\n","item_counts.plot(kind='bar')\n","plt.title('Frecuencia de cada Item Name')\n","plt.xlabel('Items preoperatorios')\n","plt.ylabel('Frecuencia')\n","plt.xticks(rotation=45)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":524},"id":"1tRuGbvzUWEK","executionInfo":{"status":"ok","timestamp":1728659530671,"user_tz":300,"elapsed":1353,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"fa2802fc-230a-439e-d1b7-e22726d62e73"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Contar los valores NaN por columna\n","#nan_counts = df_concat_vitals.isna().sum()"],"metadata":{"id":"YgjIrDkeUasv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Creo dos dataframes basados en vitals y operations"],"metadata":{"id":"Z1bdcNPwx-WD"}},{"cell_type":"code","source":["#Parametros a analizar\n","val=vi_data['subject_id']==158995752\n","\n","data1=vi_data[val]\n","valores_unicos = data1['item_name'].unique()\n","# Convertir los valores únicos en una lista\n","valores_unicos_lista = list(valores_unicos)\n","#print(valores_unicos_lista)\n","\n","\n","#valores_unicos_mean=['rr','spo2','o2','air','minvol','vt','pip','hr','art_dbp','art_mbp','etco2','fio2','hs','uo','ebl','peep']\n","valores_unicos2=['rr','spo2','o2','air','minvol','vt','pip','hr','art_dbp','art_mbp','etco2','fio2','hs','uo','ebl','peep']\n","valores_mean = [f\"{valor}_mean\" for valor in valores_unicos2]\n","valores_min = [f\"{valor}_min\" for valor in valores_unicos2]\n","valores_max = [f\"{valor}_max\" for valor in valores_unicos2]\n","\n","# Imprimir las listas para verificar\n","print(\"Lista con sufijo _mean:\", valores_mean)\n","print(\"Lista con sufijo _min:\", valores_min)\n","print(\"Lista con sufijo _max:\", valores_max)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OmuY3i__yEVp","executionInfo":{"status":"ok","timestamp":1728659536151,"user_tz":300,"elapsed":404,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"04c7cb54-0d6c-46cd-8759-ed15706a57a0"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Lista con sufijo _mean: ['rr_mean', 'spo2_mean', 'o2_mean', 'air_mean', 'minvol_mean', 'vt_mean', 'pip_mean', 'hr_mean', 'art_dbp_mean', 'art_mbp_mean', 'etco2_mean', 'fio2_mean', 'hs_mean', 'uo_mean', 'ebl_mean', 'peep_mean']\n","Lista con sufijo _min: ['rr_min', 'spo2_min', 'o2_min', 'air_min', 'minvol_min', 'vt_min', 'pip_min', 'hr_min', 'art_dbp_min', 'art_mbp_min', 'etco2_min', 'fio2_min', 'hs_min', 'uo_min', 'ebl_min', 'peep_min']\n","Lista con sufijo _max: ['rr_max', 'spo2_max', 'o2_max', 'air_max', 'minvol_max', 'vt_max', 'pip_max', 'hr_max', 'art_dbp_max', 'art_mbp_max', 'etco2_max', 'fio2_max', 'hs_max', 'uo_max', 'ebl_max', 'peep_max']\n"]}]},{"cell_type":"code","source":["paciente_info=[]\n","\n","for indice in pacientes_mod:\n","\n","    data_paciente = vi_data[vi_data['op_id'] == indice]\n","    # Iterar sobre cada valor único en la columna 'columna_a'\n","    promedios = []\n","    for valor in valores_unicos2:\n","\n","        # Filtrar el DataFrame para obtener solo las filas con el valor actual de 'columna_a'\n","        subconjunto = data_paciente[data_paciente['item_name'] == valor]\n","        # Calcular el promedio de los valores en 'columna_b' para este subconjunto\n","        promedio = subconjunto['value'].mean()\n","        # Agregar el promedio a la lista de promedios\n","        promedios.append(promedio)\n","\n","    paciente_info.append(promedios)\n","\n","paciente_info\n","\n","df_vitals_pacientes = pd.DataFrame(paciente_info)\n","df_vitals_pacientes.columns= valores_unicos2\n","df_vitals_pacientes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"thHnfcoCyLV4","executionInfo":{"status":"ok","timestamp":1728659737620,"user_tz":300,"elapsed":197569,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"eae50d91-813d-4821-ce95-39faabd75b80"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             rr       spo2        o2       air    minvol          vt  \\\n","0     13.294872  99.875000  3.350000  0.650000  6.317949  475.487179   \n","1           NaN  99.583333  0.900000  1.500000       NaN         NaN   \n","2      9.519231  99.215190  3.233333  0.260000  4.046154  467.384615   \n","3     12.916667  99.047619  3.300000  0.250000  3.800000  326.000000   \n","4     15.027778  95.000000  3.300000  0.333333  8.423529  570.588235   \n","...         ...        ...       ...       ...       ...         ...   \n","1309  10.565789  99.447368  3.250000  1.500000  3.091892  314.054054   \n","1310   9.847826  99.375000  3.250000  1.500000  3.872727  386.181818   \n","1311  10.782609  99.280000  3.350000  1.500000  4.313043  430.956522   \n","1312  10.673077  99.849057  3.250000  1.500000  5.615385  542.769231   \n","1313   9.730769  99.392857  3.350000  1.500000  3.753846  384.615385   \n","\n","            pip         hr    art_dbp    art_mbp      etco2       fio2  \\\n","0     11.302632  73.157895  51.105263  67.842105  27.378378  47.405405   \n","1           NaN  99.657143  43.542857  59.028571  31.402778        NaN   \n","2     16.363636  95.714286  52.346667  66.181818  30.506757  53.297297   \n","3      6.588235  78.700000        NaN        NaN  31.312500  48.937500   \n","4     19.212121  98.111111        NaN        NaN  30.328571  39.605263   \n","...         ...        ...        ...        ...        ...        ...   \n","1309  14.394737  57.466667  48.333333  73.555556  30.565789  47.818750   \n","1310  13.478261  73.148936  78.095238  98.545455  31.500000  44.333333   \n","1311  15.791667  63.632653  53.272727  70.454545  32.304348  42.054545   \n","1312  12.134615  52.761905  56.117647  76.039216  31.596154  42.748000   \n","1313  13.192308  53.018868  61.760000  83.760000  32.634615  40.565217   \n","\n","              hs          uo         ebl      peep  \n","0     125.000000  132.500000  100.000000       NaN  \n","1            NaN   16.666667  200.000000       NaN  \n","2     166.666667  410.000000  500.000000  2.194805  \n","3     400.000000   70.000000         NaN       NaN  \n","4     300.000000   50.000000   30.000000       NaN  \n","...          ...         ...         ...       ...  \n","1309         NaN   20.000000  135.714286  5.421053  \n","1310  300.000000   50.000000   70.000000  4.695652  \n","1311         NaN         NaN   40.000000  2.041667  \n","1312  100.000000   50.000000   55.000000  2.076923  \n","1313  225.000000   50.000000  100.000000  4.692308  \n","\n","[1314 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-6d2958af-a9b1-4d8b-b2c4-7b93db115fe7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rr</th>\n","      <th>spo2</th>\n","      <th>o2</th>\n","      <th>air</th>\n","      <th>minvol</th>\n","      <th>vt</th>\n","      <th>pip</th>\n","      <th>hr</th>\n","      <th>art_dbp</th>\n","      <th>art_mbp</th>\n","      <th>etco2</th>\n","      <th>fio2</th>\n","      <th>hs</th>\n","      <th>uo</th>\n","      <th>ebl</th>\n","      <th>peep</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13.294872</td>\n","      <td>99.875000</td>\n","      <td>3.350000</td>\n","      <td>0.650000</td>\n","      <td>6.317949</td>\n","      <td>475.487179</td>\n","      <td>11.302632</td>\n","      <td>73.157895</td>\n","      <td>51.105263</td>\n","      <td>67.842105</td>\n","      <td>27.378378</td>\n","      <td>47.405405</td>\n","      <td>125.000000</td>\n","      <td>132.500000</td>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>99.583333</td>\n","      <td>0.900000</td>\n","      <td>1.500000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>99.657143</td>\n","      <td>43.542857</td>\n","      <td>59.028571</td>\n","      <td>31.402778</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>16.666667</td>\n","      <td>200.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9.519231</td>\n","      <td>99.215190</td>\n","      <td>3.233333</td>\n","      <td>0.260000</td>\n","      <td>4.046154</td>\n","      <td>467.384615</td>\n","      <td>16.363636</td>\n","      <td>95.714286</td>\n","      <td>52.346667</td>\n","      <td>66.181818</td>\n","      <td>30.506757</td>\n","      <td>53.297297</td>\n","      <td>166.666667</td>\n","      <td>410.000000</td>\n","      <td>500.000000</td>\n","      <td>2.194805</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12.916667</td>\n","      <td>99.047619</td>\n","      <td>3.300000</td>\n","      <td>0.250000</td>\n","      <td>3.800000</td>\n","      <td>326.000000</td>\n","      <td>6.588235</td>\n","      <td>78.700000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>31.312500</td>\n","      <td>48.937500</td>\n","      <td>400.000000</td>\n","      <td>70.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15.027778</td>\n","      <td>95.000000</td>\n","      <td>3.300000</td>\n","      <td>0.333333</td>\n","      <td>8.423529</td>\n","      <td>570.588235</td>\n","      <td>19.212121</td>\n","      <td>98.111111</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>30.328571</td>\n","      <td>39.605263</td>\n","      <td>300.000000</td>\n","      <td>50.000000</td>\n","      <td>30.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1309</th>\n","      <td>10.565789</td>\n","      <td>99.447368</td>\n","      <td>3.250000</td>\n","      <td>1.500000</td>\n","      <td>3.091892</td>\n","      <td>314.054054</td>\n","      <td>14.394737</td>\n","      <td>57.466667</td>\n","      <td>48.333333</td>\n","      <td>73.555556</td>\n","      <td>30.565789</td>\n","      <td>47.818750</td>\n","      <td>NaN</td>\n","      <td>20.000000</td>\n","      <td>135.714286</td>\n","      <td>5.421053</td>\n","    </tr>\n","    <tr>\n","      <th>1310</th>\n","      <td>9.847826</td>\n","      <td>99.375000</td>\n","      <td>3.250000</td>\n","      <td>1.500000</td>\n","      <td>3.872727</td>\n","      <td>386.181818</td>\n","      <td>13.478261</td>\n","      <td>73.148936</td>\n","      <td>78.095238</td>\n","      <td>98.545455</td>\n","      <td>31.500000</td>\n","      <td>44.333333</td>\n","      <td>300.000000</td>\n","      <td>50.000000</td>\n","      <td>70.000000</td>\n","      <td>4.695652</td>\n","    </tr>\n","    <tr>\n","      <th>1311</th>\n","      <td>10.782609</td>\n","      <td>99.280000</td>\n","      <td>3.350000</td>\n","      <td>1.500000</td>\n","      <td>4.313043</td>\n","      <td>430.956522</td>\n","      <td>15.791667</td>\n","      <td>63.632653</td>\n","      <td>53.272727</td>\n","      <td>70.454545</td>\n","      <td>32.304348</td>\n","      <td>42.054545</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>40.000000</td>\n","      <td>2.041667</td>\n","    </tr>\n","    <tr>\n","      <th>1312</th>\n","      <td>10.673077</td>\n","      <td>99.849057</td>\n","      <td>3.250000</td>\n","      <td>1.500000</td>\n","      <td>5.615385</td>\n","      <td>542.769231</td>\n","      <td>12.134615</td>\n","      <td>52.761905</td>\n","      <td>56.117647</td>\n","      <td>76.039216</td>\n","      <td>31.596154</td>\n","      <td>42.748000</td>\n","      <td>100.000000</td>\n","      <td>50.000000</td>\n","      <td>55.000000</td>\n","      <td>2.076923</td>\n","    </tr>\n","    <tr>\n","      <th>1313</th>\n","      <td>9.730769</td>\n","      <td>99.392857</td>\n","      <td>3.350000</td>\n","      <td>1.500000</td>\n","      <td>3.753846</td>\n","      <td>384.615385</td>\n","      <td>13.192308</td>\n","      <td>53.018868</td>\n","      <td>61.760000</td>\n","      <td>83.760000</td>\n","      <td>32.634615</td>\n","      <td>40.565217</td>\n","      <td>225.000000</td>\n","      <td>50.000000</td>\n","      <td>100.000000</td>\n","      <td>4.692308</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1314 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d2958af-a9b1-4d8b-b2c4-7b93db115fe7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6d2958af-a9b1-4d8b-b2c4-7b93db115fe7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6d2958af-a9b1-4d8b-b2c4-7b93db115fe7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-121a34b6-507b-495c-84de-2be28d183538\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-121a34b6-507b-495c-84de-2be28d183538')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-121a34b6-507b-495c-84de-2be28d183538 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d81365bc-d40e-4d77-8851-bba5f1879c5e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_vitals_pacientes')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d81365bc-d40e-4d77-8851-bba5f1879c5e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_vitals_pacientes');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_vitals_pacientes","summary":"{\n  \"name\": \"df_vitals_pacientes\",\n  \"rows\": 1314,\n  \"fields\": [\n    {\n      \"column\": \"rr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6328098513973626,\n        \"min\": 3.5,\n        \"max\": 19.666666666666668,\n        \"num_unique_values\": 1128,\n        \"samples\": [\n          11.662162162162161,\n          10.91304347826087,\n          10.035714285714286\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"spo2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3588791953193171,\n        \"min\": 85.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 782,\n        \"samples\": [\n          97.63636363636364,\n          99.21052631578948,\n          99.82758620689656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"o2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0607860777857632,\n        \"min\": 0.0,\n        \"max\": 8.0,\n        \"num_unique_values\": 160,\n        \"samples\": [\n          2.0714285714285716,\n          0.5909090909090909,\n          3.925\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.426272417822161,\n        \"min\": 0.0,\n        \"max\": 1.6,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          1.6,\n          0.65,\n          0.72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minvol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1235222645234124,\n        \"min\": 1.2,\n        \"max\": 8.533333333333337,\n        \"num_unique_values\": 1147,\n        \"samples\": [\n          4.572727272727273,\n          3.891891891891892,\n          3.8188679245283015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64.53564657639375,\n        \"min\": 196.0,\n        \"max\": 611.8857142857142,\n        \"num_unique_values\": 1233,\n        \"samples\": [\n          388.6666666666667,\n          445.44,\n          370.2608695652174\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.12486566501609,\n        \"min\": 1.0,\n        \"max\": 28.0,\n        \"num_unique_values\": 1177,\n        \"samples\": [\n          17.357142857142858,\n          10.16,\n          15.928571428571429\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.677237344329967,\n        \"min\": 47.333333333333336,\n        \"max\": 108.0,\n        \"num_unique_values\": 1216,\n        \"samples\": [\n          72.0909090909091,\n          68.78947368421052,\n          70.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"art_dbp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.013149434485678,\n        \"min\": 40.0,\n        \"max\": 86.44444444444444,\n        \"num_unique_values\": 938,\n        \"samples\": [\n          52.27906976744186,\n          63.45454545454545,\n          72.63157894736842\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"art_mbp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597537158334214,\n        \"min\": 6.0,\n        \"max\": 106.43243243243244,\n        \"num_unique_values\": 953,\n        \"samples\": [\n          78.61111111111111,\n          89.36842105263158,\n          74.375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"etco2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.051746508659794,\n        \"min\": 0.0,\n        \"max\": 40.583333333333336,\n        \"num_unique_values\": 1196,\n        \"samples\": [\n          30.083333333333332,\n          29.863636363636363,\n          33.471830985915496\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fio2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.5980479128375,\n        \"min\": 21.0,\n        \"max\": 95.5222222222222,\n        \"num_unique_values\": 1134,\n        \"samples\": [\n          38.38636363636363,\n          49.629629629629626,\n          37.2125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 154.23127975467588,\n        \"min\": 0.0,\n        \"max\": 700.0,\n        \"num_unique_values\": 199,\n        \"samples\": [\n          70.0,\n          550.0,\n          115.38461538461539\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"uo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.36380425495705,\n        \"min\": 5.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 255,\n        \"samples\": [\n          260.0,\n          47.5,\n          95.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ebl\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98.8932144077164,\n        \"min\": 10.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 226,\n        \"samples\": [\n          133.33333333333334,\n          150.95238095238096,\n          433.3333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.294204160611805,\n        \"min\": 0.0,\n        \"max\": 8.0,\n        \"num_unique_values\": 591,\n        \"samples\": [\n          5.257575757575758,\n          2.2413793103448274,\n          0.15625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["\n","# Crear listas para almacenar la información de los pacientes\n","paciente_info_mean = []\n","paciente_info_min = []\n","paciente_info_max = []\n","\n","# Iterar sobre cada paciente\n","for indice in pacientes_mod:\n","    data_paciente = vi_data[vi_data['op_id'] == indice]\n","\n","    promedios = []\n","    minimos = []\n","    maximos = []\n","\n","    # Iterar sobre cada valor único en la columna 'item_name'\n","    for valor in valores_unicos2:\n","        subconjunto = data_paciente[data_paciente['item_name'] == valor]\n","\n","        # Reemplazar NaN por 0\n","        subconjunto['value'] = subconjunto['value'].fillna(0)\n","\n","        # Calcular promedio, mínimo y máximo\n","        promedio = subconjunto['value'].mean()\n","        minimo = subconjunto['value'].min()\n","        maximo = subconjunto['value'].max()\n","\n","        # Agregar los valores a las listas correspondientes\n","        promedios.append(promedio)\n","        minimos.append(minimo)\n","        maximos.append(maximo)\n","\n","    # Agregar la información del paciente a las listas\n","    paciente_info_mean.append(promedios)\n","    paciente_info_min.append(minimos)\n","    paciente_info_max.append(maximos)\n","\n","# Crear los DataFrames\n","df_vitals_mean = pd.DataFrame(paciente_info_mean, columns=valores_mean)\n","df_vitals_min = pd.DataFrame(paciente_info_min, columns=valores_min)\n","df_vitals_max = pd.DataFrame(paciente_info_max, columns=valores_max)\n","\n","# Unir los DataFrames\n","df_vitals_combined = pd.concat([df_vitals_mean, df_vitals_min, df_vitals_max], axis=1)\n","\n","# Mostrar el DataFrame combinado\n","\n"],"metadata":{"id":"Dvr4PckPzyJz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728659955457,"user_tz":300,"elapsed":202269,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"0914c6e9-b204-492e-bf0b-9f5fa3990220"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-11-5a5e526e290a>:19: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  subconjunto['value'] = subconjunto['value'].fillna(0)\n"]}]},{"cell_type":"code","source":["df_vitals_combined"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"8WdBX2IA0yP3","executionInfo":{"status":"ok","timestamp":1728660177647,"user_tz":300,"elapsed":357,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"8aed1677-c863-4a4a-f322-dbf3a89f7b9d"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        rr_mean  spo2_mean   o2_mean  air_mean  minvol_mean     vt_mean  \\\n","0     13.294872  99.875000  3.350000  0.650000     6.317949  475.487179   \n","1           NaN  99.583333  0.900000  1.500000          NaN         NaN   \n","2      9.519231  99.215190  3.233333  0.260000     4.046154  467.384615   \n","3     12.916667  99.047619  3.300000  0.250000     3.800000  326.000000   \n","4     15.027778  95.000000  3.300000  0.333333     8.423529  570.588235   \n","...         ...        ...       ...       ...          ...         ...   \n","1309  10.565789  99.447368  3.250000  1.500000     3.091892  314.054054   \n","1310   9.847826  99.375000  3.250000  1.500000     3.872727  386.181818   \n","1311  10.782609  99.280000  3.350000  1.500000     4.313043  430.956522   \n","1312  10.673077  99.849057  3.250000  1.500000     5.615385  542.769231   \n","1313   9.730769  99.392857  3.350000  1.500000     3.753846  384.615385   \n","\n","       pip_mean    hr_mean  art_dbp_mean  art_mbp_mean  ...  pip_max  hr_max  \\\n","0     11.302632  73.157895     51.105263     67.842105  ...     14.0    88.0   \n","1           NaN  99.657143     43.542857     59.028571  ...      NaN   108.0   \n","2     16.363636  95.714286     52.346667     66.181818  ...     28.0   108.0   \n","3      6.588235  78.700000           NaN           NaN  ...     10.5    92.0   \n","4     19.212121  98.111111           NaN           NaN  ...     23.0   108.0   \n","...         ...        ...           ...           ...  ...      ...     ...   \n","1309  14.394737  57.466667     48.333333     73.555556  ...     19.0    76.0   \n","1310  13.478261  73.148936     78.095238     98.545455  ...     16.0   108.0   \n","1311  15.791667  63.632653     53.272727     70.454545  ...     23.0   100.0   \n","1312  12.134615  52.761905     56.117647     76.039216  ...     14.0    64.0   \n","1313  13.192308  53.018868     61.760000     83.760000  ...     15.0   108.0   \n","\n","      art_dbp_max  art_mbp_max  etco2_max  fio2_max  hs_max  uo_max  ebl_max  \\\n","0            66.0         98.0       35.0      91.0   400.0   230.0    100.0   \n","1            52.0         78.0       37.0       NaN     NaN    20.0    300.0   \n","2            68.0         88.0       35.0      95.0   700.0   500.0    500.0   \n","3             NaN          NaN       35.0      76.0   400.0    70.0      NaN   \n","4             NaN          NaN       41.0      91.0   400.0    50.0     40.0   \n","...           ...          ...        ...       ...     ...     ...      ...   \n","1309         68.0        106.0       39.0      97.2     NaN    20.0    300.0   \n","1310         88.0        114.0       35.0      76.0   400.0    50.0    100.0   \n","1311         64.0         86.0       35.0      97.2     NaN     NaN     40.0   \n","1312         72.0         98.0       39.0      97.2   200.0    70.0    100.0   \n","1313         82.0        106.0       41.0      76.0   400.0    50.0    100.0   \n","\n","      peep_max  \n","0          NaN  \n","1          NaN  \n","2          5.0  \n","3          NaN  \n","4          NaN  \n","...        ...  \n","1309       7.0  \n","1310       5.0  \n","1311       3.0  \n","1312       4.0  \n","1313       6.0  \n","\n","[1314 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-9cd52b12-0653-41fa-9156-8cb9f73bd7de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rr_mean</th>\n","      <th>spo2_mean</th>\n","      <th>o2_mean</th>\n","      <th>air_mean</th>\n","      <th>minvol_mean</th>\n","      <th>vt_mean</th>\n","      <th>pip_mean</th>\n","      <th>hr_mean</th>\n","      <th>art_dbp_mean</th>\n","      <th>art_mbp_mean</th>\n","      <th>...</th>\n","      <th>pip_max</th>\n","      <th>hr_max</th>\n","      <th>art_dbp_max</th>\n","      <th>art_mbp_max</th>\n","      <th>etco2_max</th>\n","      <th>fio2_max</th>\n","      <th>hs_max</th>\n","      <th>uo_max</th>\n","      <th>ebl_max</th>\n","      <th>peep_max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13.294872</td>\n","      <td>99.875000</td>\n","      <td>3.350000</td>\n","      <td>0.650000</td>\n","      <td>6.317949</td>\n","      <td>475.487179</td>\n","      <td>11.302632</td>\n","      <td>73.157895</td>\n","      <td>51.105263</td>\n","      <td>67.842105</td>\n","      <td>...</td>\n","      <td>14.0</td>\n","      <td>88.0</td>\n","      <td>66.0</td>\n","      <td>98.0</td>\n","      <td>35.0</td>\n","      <td>91.0</td>\n","      <td>400.0</td>\n","      <td>230.0</td>\n","      <td>100.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>99.583333</td>\n","      <td>0.900000</td>\n","      <td>1.500000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>99.657143</td>\n","      <td>43.542857</td>\n","      <td>59.028571</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>108.0</td>\n","      <td>52.0</td>\n","      <td>78.0</td>\n","      <td>37.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>300.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9.519231</td>\n","      <td>99.215190</td>\n","      <td>3.233333</td>\n","      <td>0.260000</td>\n","      <td>4.046154</td>\n","      <td>467.384615</td>\n","      <td>16.363636</td>\n","      <td>95.714286</td>\n","      <td>52.346667</td>\n","      <td>66.181818</td>\n","      <td>...</td>\n","      <td>28.0</td>\n","      <td>108.0</td>\n","      <td>68.0</td>\n","      <td>88.0</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>700.0</td>\n","      <td>500.0</td>\n","      <td>500.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12.916667</td>\n","      <td>99.047619</td>\n","      <td>3.300000</td>\n","      <td>0.250000</td>\n","      <td>3.800000</td>\n","      <td>326.000000</td>\n","      <td>6.588235</td>\n","      <td>78.700000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>10.5</td>\n","      <td>92.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>70.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15.027778</td>\n","      <td>95.000000</td>\n","      <td>3.300000</td>\n","      <td>0.333333</td>\n","      <td>8.423529</td>\n","      <td>570.588235</td>\n","      <td>19.212121</td>\n","      <td>98.111111</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>108.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41.0</td>\n","      <td>91.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>40.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1309</th>\n","      <td>10.565789</td>\n","      <td>99.447368</td>\n","      <td>3.250000</td>\n","      <td>1.500000</td>\n","      <td>3.091892</td>\n","      <td>314.054054</td>\n","      <td>14.394737</td>\n","      <td>57.466667</td>\n","      <td>48.333333</td>\n","      <td>73.555556</td>\n","      <td>...</td>\n","      <td>19.0</td>\n","      <td>76.0</td>\n","      <td>68.0</td>\n","      <td>106.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>300.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>1310</th>\n","      <td>9.847826</td>\n","      <td>99.375000</td>\n","      <td>3.250000</td>\n","      <td>1.500000</td>\n","      <td>3.872727</td>\n","      <td>386.181818</td>\n","      <td>13.478261</td>\n","      <td>73.148936</td>\n","      <td>78.095238</td>\n","      <td>98.545455</td>\n","      <td>...</td>\n","      <td>16.0</td>\n","      <td>108.0</td>\n","      <td>88.0</td>\n","      <td>114.0</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1311</th>\n","      <td>10.782609</td>\n","      <td>99.280000</td>\n","      <td>3.350000</td>\n","      <td>1.500000</td>\n","      <td>4.313043</td>\n","      <td>430.956522</td>\n","      <td>15.791667</td>\n","      <td>63.632653</td>\n","      <td>53.272727</td>\n","      <td>70.454545</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>100.0</td>\n","      <td>64.0</td>\n","      <td>86.0</td>\n","      <td>35.0</td>\n","      <td>97.2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>40.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1312</th>\n","      <td>10.673077</td>\n","      <td>99.849057</td>\n","      <td>3.250000</td>\n","      <td>1.500000</td>\n","      <td>5.615385</td>\n","      <td>542.769231</td>\n","      <td>12.134615</td>\n","      <td>52.761905</td>\n","      <td>56.117647</td>\n","      <td>76.039216</td>\n","      <td>...</td>\n","      <td>14.0</td>\n","      <td>64.0</td>\n","      <td>72.0</td>\n","      <td>98.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>200.0</td>\n","      <td>70.0</td>\n","      <td>100.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>1313</th>\n","      <td>9.730769</td>\n","      <td>99.392857</td>\n","      <td>3.350000</td>\n","      <td>1.500000</td>\n","      <td>3.753846</td>\n","      <td>384.615385</td>\n","      <td>13.192308</td>\n","      <td>53.018868</td>\n","      <td>61.760000</td>\n","      <td>83.760000</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>41.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>6.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1314 rows × 48 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cd52b12-0653-41fa-9156-8cb9f73bd7de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9cd52b12-0653-41fa-9156-8cb9f73bd7de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9cd52b12-0653-41fa-9156-8cb9f73bd7de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f4bf2f4b-cdfb-41c3-8d1a-18359349d67b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f4bf2f4b-cdfb-41c3-8d1a-18359349d67b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f4bf2f4b-cdfb-41c3-8d1a-18359349d67b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_adb32ac7-a80c-4974-99fd-2af30f5ea8ad\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_vitals_combined')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_adb32ac7-a80c-4974-99fd-2af30f5ea8ad button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_vitals_combined');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_vitals_combined"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["frame=[]\n","for valor in pacientes_mod:\n","  fila=ope_data[ope_data['op_id'] == valor]\n","  frame.append(fila)\n","\n","operation_pac = pd.concat(frame)\n","operation_pac"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"tPlG_ozWyS2U","executionInfo":{"status":"ok","timestamp":1728660183065,"user_tz":300,"elapsed":1866,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"2f8f10fd-f1c8-480b-b933-dfa6a103c468"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            op_id  subject_id    hadm_id  case_id   opdate  age sex  weight  \\\n","1       446270725   158995752  257857903      NaN        0   70   M    43.0   \n","35      452566478   158995752  257857903      NaN     2880   70   M    43.0   \n","52      440391574   192250700  291434429      NaN     1440   65   F    59.0   \n","123     411634952   121041674  275074982      NaN     2880   60   F    43.0   \n","143     442167773   144893612  280737012      NaN        0   40   M    63.0   \n","...           ...         ...        ...      ...      ...  ...  ..     ...   \n","110945  487618002   186132074  263817440 -25472.0     1440   80   F    49.0   \n","112059  416006595   192891843  216410186 -22950.0     1440   50   F    64.0   \n","112280  428282025   173675824  270574460 -23122.0     1440   25   F    75.0   \n","114063  496198262   178121234  243505343 -18019.0  2350080   70   M    60.0   \n","121644  416505832   173926023  278259675      NaN     1440   45   F    49.0   \n","\n","        height   race  ...  opend_time  admission_time discharge_time  \\\n","1        168.0  Asian  ...      1540.0               0          70555   \n","35       174.0  Asian  ...      4015.0               0          70555   \n","52       163.0  Asian  ...      2740.0               0          31675   \n","123      157.0  Asian  ...      3460.0               0          11515   \n","143      174.0  Asian  ...       450.0               0          12955   \n","...        ...    ...  ...         ...             ...            ...   \n","110945   146.0  Asian  ...      2330.0               0          14395   \n","112059   158.0  Asian  ...      2375.0               0          10075   \n","112280   160.0  Asian  ...      2145.0               0           8635   \n","114063   158.0  Asian  ...   2350960.0         2347200        2358715   \n","121644   159.0  Asian  ...      2375.0               0          10075   \n","\n","       anstart_time anend_time  cpbon_time  cpboff_time  icuin_time  \\\n","1            1345.0     1540.0         NaN          NaN      1550.0   \n","35           3830.0     4020.0         NaN          NaN      1550.0   \n","52           2355.0     2735.0         NaN          NaN      2750.0   \n","123          3365.0     3465.0         NaN          NaN         NaN   \n","143           270.0      445.0         NaN          NaN       460.0   \n","...             ...        ...         ...          ...         ...   \n","110945       2170.0     2355.0         NaN          NaN         NaN   \n","112059       2265.0     2380.0         NaN          NaN         NaN   \n","112280       2030.0     2145.0         NaN          NaN         NaN   \n","114063    2350710.0  2350965.0         NaN          NaN         NaN   \n","121644       2255.0     2380.0         NaN          NaN         NaN   \n","\n","        icuout_time  inhosp_death_time  \n","1           19595.0            69860.0  \n","35          19595.0            69860.0  \n","52           5095.0                NaN  \n","123             NaN                NaN  \n","143          2390.0                NaN  \n","...             ...                ...  \n","110945          NaN                NaN  \n","112059          NaN                NaN  \n","112280          NaN                NaN  \n","114063          NaN                NaN  \n","121644          NaN                NaN  \n","\n","[1314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-d57623dc-bc8b-4190-a1d7-6955b125cd4e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>op_id</th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>case_id</th>\n","      <th>opdate</th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>weight</th>\n","      <th>height</th>\n","      <th>race</th>\n","      <th>...</th>\n","      <th>opend_time</th>\n","      <th>admission_time</th>\n","      <th>discharge_time</th>\n","      <th>anstart_time</th>\n","      <th>anend_time</th>\n","      <th>cpbon_time</th>\n","      <th>cpboff_time</th>\n","      <th>icuin_time</th>\n","      <th>icuout_time</th>\n","      <th>inhosp_death_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>446270725</td>\n","      <td>158995752</td>\n","      <td>257857903</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>43.0</td>\n","      <td>168.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>1540.0</td>\n","      <td>0</td>\n","      <td>70555</td>\n","      <td>1345.0</td>\n","      <td>1540.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1550.0</td>\n","      <td>19595.0</td>\n","      <td>69860.0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>452566478</td>\n","      <td>158995752</td>\n","      <td>257857903</td>\n","      <td>NaN</td>\n","      <td>2880</td>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>43.0</td>\n","      <td>174.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>4015.0</td>\n","      <td>0</td>\n","      <td>70555</td>\n","      <td>3830.0</td>\n","      <td>4020.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1550.0</td>\n","      <td>19595.0</td>\n","      <td>69860.0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>440391574</td>\n","      <td>192250700</td>\n","      <td>291434429</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>65</td>\n","      <td>F</td>\n","      <td>59.0</td>\n","      <td>163.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2740.0</td>\n","      <td>0</td>\n","      <td>31675</td>\n","      <td>2355.0</td>\n","      <td>2735.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2750.0</td>\n","      <td>5095.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>411634952</td>\n","      <td>121041674</td>\n","      <td>275074982</td>\n","      <td>NaN</td>\n","      <td>2880</td>\n","      <td>60</td>\n","      <td>F</td>\n","      <td>43.0</td>\n","      <td>157.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>3460.0</td>\n","      <td>0</td>\n","      <td>11515</td>\n","      <td>3365.0</td>\n","      <td>3465.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>442167773</td>\n","      <td>144893612</td>\n","      <td>280737012</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>63.0</td>\n","      <td>174.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>450.0</td>\n","      <td>0</td>\n","      <td>12955</td>\n","      <td>270.0</td>\n","      <td>445.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>460.0</td>\n","      <td>2390.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>110945</th>\n","      <td>487618002</td>\n","      <td>186132074</td>\n","      <td>263817440</td>\n","      <td>-25472.0</td>\n","      <td>1440</td>\n","      <td>80</td>\n","      <td>F</td>\n","      <td>49.0</td>\n","      <td>146.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2330.0</td>\n","      <td>0</td>\n","      <td>14395</td>\n","      <td>2170.0</td>\n","      <td>2355.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>112059</th>\n","      <td>416006595</td>\n","      <td>192891843</td>\n","      <td>216410186</td>\n","      <td>-22950.0</td>\n","      <td>1440</td>\n","      <td>50</td>\n","      <td>F</td>\n","      <td>64.0</td>\n","      <td>158.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2375.0</td>\n","      <td>0</td>\n","      <td>10075</td>\n","      <td>2265.0</td>\n","      <td>2380.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>112280</th>\n","      <td>428282025</td>\n","      <td>173675824</td>\n","      <td>270574460</td>\n","      <td>-23122.0</td>\n","      <td>1440</td>\n","      <td>25</td>\n","      <td>F</td>\n","      <td>75.0</td>\n","      <td>160.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2145.0</td>\n","      <td>0</td>\n","      <td>8635</td>\n","      <td>2030.0</td>\n","      <td>2145.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>114063</th>\n","      <td>496198262</td>\n","      <td>178121234</td>\n","      <td>243505343</td>\n","      <td>-18019.0</td>\n","      <td>2350080</td>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>60.0</td>\n","      <td>158.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2350960.0</td>\n","      <td>2347200</td>\n","      <td>2358715</td>\n","      <td>2350710.0</td>\n","      <td>2350965.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>121644</th>\n","      <td>416505832</td>\n","      <td>173926023</td>\n","      <td>278259675</td>\n","      <td>NaN</td>\n","      <td>1440</td>\n","      <td>45</td>\n","      <td>F</td>\n","      <td>49.0</td>\n","      <td>159.0</td>\n","      <td>Asian</td>\n","      <td>...</td>\n","      <td>2375.0</td>\n","      <td>0</td>\n","      <td>10075</td>\n","      <td>2255.0</td>\n","      <td>2380.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d57623dc-bc8b-4190-a1d7-6955b125cd4e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d57623dc-bc8b-4190-a1d7-6955b125cd4e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d57623dc-bc8b-4190-a1d7-6955b125cd4e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-15bfa5bb-3a35-4b34-830c-462578a02d3e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15bfa5bb-3a35-4b34-830c-462578a02d3e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-15bfa5bb-3a35-4b34-830c-462578a02d3e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6fee066e-a59b-4866-9130-f93ac8d6ad4d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('operation_pac')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6fee066e-a59b-4866-9130-f93ac8d6ad4d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('operation_pac');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"operation_pac"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Se procede a calcular el tiempo en UCI y estandarizar los valores de tiempo\n","\n","operation_data=operation_pac\n","new_df = operation_data[['subject_id','weight','sex', 'height','age','inhosp_death_time']].copy()\n","difference = operation_data['icuout_time'] - operation_data['icuin_time']\n","\n","\n","difference1=(operation_data['anend_time'] - operation_data['anstart_time'])\n","\n","difference2=(operation_data['opend_time'] - operation_data['opstart_time'])\n","\n","# Convertir NaN a cero en las columnas de tiempo de UCI y calcular UCI_TIME\n","\n","UCI_time=difference.fillna(0)\n","\n","\n","new_df['Anestesia_TIME']=difference1\n","new_df['Operation_TIME']=difference2\n","new_df['UCI_TIME'] = UCI_time\n","\n","# Crear la columna Mortality basada en inhosp_death_time\n","new_df['Survival Rate'] = np.where(new_df['inhosp_death_time'].notna(),1,0)\n","new_df['inhosp_death_time'] = new_df['inhosp_death_time'].fillna(0)\n","\n","new_df2= new_df.drop(columns=['inhosp_death_time'],axis=1)\n","new_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"WUq2z_VtyVQu","executionInfo":{"status":"ok","timestamp":1728660186188,"user_tz":300,"elapsed":410,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"7360cd7e-fc50-4594-f918-7a1c1dc6cd77"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        subject_id  weight sex  height  age  Anestesia_TIME  Operation_TIME  \\\n","1        158995752    43.0   M   168.0   70           195.0           170.0   \n","35       158995752    43.0   M   174.0   70           190.0           180.0   \n","52       192250700    59.0   F   163.0   65           380.0           340.0   \n","123      121041674    43.0   F   157.0   60           100.0            75.0   \n","143      144893612    63.0   M   174.0   40           175.0           140.0   \n","...            ...     ...  ..     ...  ...             ...             ...   \n","110945   186132074    49.0   F   146.0   80           185.0           115.0   \n","112059   192891843    64.0   F   158.0   50           115.0            85.0   \n","112280   173675824    75.0   F   160.0   25           115.0            70.0   \n","114063   178121234    60.0   M   158.0   70           255.0           215.0   \n","121644   173926023    49.0   F   159.0   45           125.0           100.0   \n","\n","        UCI_TIME  Survival Rate  \n","1        18045.0              1  \n","35       18045.0              1  \n","52        2345.0              0  \n","123          0.0              0  \n","143       1930.0              0  \n","...          ...            ...  \n","110945       0.0              0  \n","112059       0.0              0  \n","112280       0.0              0  \n","114063       0.0              0  \n","121644       0.0              0  \n","\n","[1314 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-329bbfee-6cd4-41e3-ac2e-28d063fbbc98\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>weight</th>\n","      <th>sex</th>\n","      <th>height</th>\n","      <th>age</th>\n","      <th>Anestesia_TIME</th>\n","      <th>Operation_TIME</th>\n","      <th>UCI_TIME</th>\n","      <th>Survival Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>158995752</td>\n","      <td>43.0</td>\n","      <td>M</td>\n","      <td>168.0</td>\n","      <td>70</td>\n","      <td>195.0</td>\n","      <td>170.0</td>\n","      <td>18045.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>158995752</td>\n","      <td>43.0</td>\n","      <td>M</td>\n","      <td>174.0</td>\n","      <td>70</td>\n","      <td>190.0</td>\n","      <td>180.0</td>\n","      <td>18045.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>192250700</td>\n","      <td>59.0</td>\n","      <td>F</td>\n","      <td>163.0</td>\n","      <td>65</td>\n","      <td>380.0</td>\n","      <td>340.0</td>\n","      <td>2345.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>121041674</td>\n","      <td>43.0</td>\n","      <td>F</td>\n","      <td>157.0</td>\n","      <td>60</td>\n","      <td>100.0</td>\n","      <td>75.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>144893612</td>\n","      <td>63.0</td>\n","      <td>M</td>\n","      <td>174.0</td>\n","      <td>40</td>\n","      <td>175.0</td>\n","      <td>140.0</td>\n","      <td>1930.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>110945</th>\n","      <td>186132074</td>\n","      <td>49.0</td>\n","      <td>F</td>\n","      <td>146.0</td>\n","      <td>80</td>\n","      <td>185.0</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>112059</th>\n","      <td>192891843</td>\n","      <td>64.0</td>\n","      <td>F</td>\n","      <td>158.0</td>\n","      <td>50</td>\n","      <td>115.0</td>\n","      <td>85.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>112280</th>\n","      <td>173675824</td>\n","      <td>75.0</td>\n","      <td>F</td>\n","      <td>160.0</td>\n","      <td>25</td>\n","      <td>115.0</td>\n","      <td>70.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>114063</th>\n","      <td>178121234</td>\n","      <td>60.0</td>\n","      <td>M</td>\n","      <td>158.0</td>\n","      <td>70</td>\n","      <td>255.0</td>\n","      <td>215.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>121644</th>\n","      <td>173926023</td>\n","      <td>49.0</td>\n","      <td>F</td>\n","      <td>159.0</td>\n","      <td>45</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1314 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-329bbfee-6cd4-41e3-ac2e-28d063fbbc98')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-329bbfee-6cd4-41e3-ac2e-28d063fbbc98 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-329bbfee-6cd4-41e3-ac2e-28d063fbbc98');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b7ddf65d-eaba-4c57-93e0-8cfac72fd6d3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7ddf65d-eaba-4c57-93e0-8cfac72fd6d3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b7ddf65d-eaba-4c57-93e0-8cfac72fd6d3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b450d163-c82c-48b3-b4ff-4ade10aa133f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('new_df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b450d163-c82c-48b3-b4ff-4ade10aa133f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('new_df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_df2","summary":"{\n  \"name\": \"new_df2\",\n  \"rows\": 1314,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28141448,\n        \"min\": 100030433,\n        \"max\": 199746911,\n        \"num_unique_values\": 1235,\n        \"samples\": [\n          123769544,\n          185599724,\n          197806110\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.365886898218664,\n        \"min\": 43.0,\n        \"max\": 89.0,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          43.0,\n          89.0,\n          60.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.126700039512063,\n        \"min\": 146.0,\n        \"max\": 179.0,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          168.0,\n          172.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 20,\n        \"max\": 90,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          50,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Anestesia_TIME\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115.52172666731767,\n        \"min\": 40.0,\n        \"max\": 1380.0,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          225.0,\n          390.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operation_TIME\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111.29939674378039,\n        \"min\": 15.0,\n        \"max\": 1345.0,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          265.0,\n          105.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UCI_TIME\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6756.160673251562,\n        \"min\": 0.0,\n        \"max\": 86655.0,\n        \"num_unique_values\": 324,\n        \"samples\": [\n          1300.0,\n          86655.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survival Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["#Concateno y limpio de data"],"metadata":{"id":"Qjhhabv20R98"}},{"cell_type":"code","source":["new_df2 = new_df2.reset_index(drop=True)\n","df_vitals_pacientes = df_vitals_combined.reset_index(drop=True)\n","\n","df_concat_vitals = pd.concat([new_df2,df_vitals_pacientes],axis=1)\n","\n","#Elimino los que han tenido mas de una operación\n","df_concat_vitals = df_concat_vitals[~df_concat_vitals['subject_id'].duplicated(keep=False)]\n","df_concat_vitals"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"YR5tYNtZ0S2L","executionInfo":{"status":"ok","timestamp":1728660193589,"user_tz":300,"elapsed":319,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"d5c5b0ae-f079-4c33-9c13-33b4952e77e9"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      subject_id  weight sex  height  age  Anestesia_TIME  Operation_TIME  \\\n","2      192250700    59.0   F   163.0   65           380.0           340.0   \n","4      144893612    63.0   M   174.0   40           175.0           140.0   \n","5      118515241    46.0   F   146.0   85           180.0           100.0   \n","7      131682281    56.0   F   156.0   30           195.0           165.0   \n","8      192170760    64.0   F   162.0   35           125.0           100.0   \n","...          ...     ...  ..     ...  ...             ...             ...   \n","1309   186132074    49.0   F   146.0   80           185.0           115.0   \n","1310   192891843    64.0   F   158.0   50           115.0            85.0   \n","1311   173675824    75.0   F   160.0   25           115.0            70.0   \n","1312   178121234    60.0   M   158.0   70           255.0           215.0   \n","1313   173926023    49.0   F   159.0   45           125.0           100.0   \n","\n","      UCI_TIME  Survival Rate    rr_mean  ...  pip_max  hr_max  art_dbp_max  \\\n","2       2345.0              0   9.519231  ...     28.0   108.0         68.0   \n","4       1930.0              0  15.027778  ...     23.0   108.0          NaN   \n","5       3770.0              0  10.569444  ...     23.0   108.0         82.0   \n","7          0.0              0   9.085714  ...     15.0    74.0         82.0   \n","8          0.0              0   9.596154  ...     19.0    88.0          NaN   \n","...        ...            ...        ...  ...      ...     ...          ...   \n","1309       0.0              0  10.565789  ...     19.0    76.0         68.0   \n","1310       0.0              0   9.847826  ...     16.0   108.0         88.0   \n","1311       0.0              0  10.782609  ...     23.0   100.0         64.0   \n","1312       0.0              0  10.673077  ...     14.0    64.0         72.0   \n","1313       0.0              0   9.730769  ...     15.0   108.0         82.0   \n","\n","      art_mbp_max  etco2_max  fio2_max  hs_max  uo_max  ebl_max  peep_max  \n","2            88.0       35.0      95.0   700.0   500.0    500.0       5.0  \n","4             NaN       41.0      91.0   400.0    50.0     40.0       NaN  \n","5           114.0       37.0       NaN   400.0   120.0     40.0       1.0  \n","7           106.0       35.0      58.0   550.0    90.0    150.0       3.0  \n","8             NaN       35.0      95.0   550.0    20.0    150.0       0.0  \n","...           ...        ...       ...     ...     ...      ...       ...  \n","1309        106.0       39.0      97.2     NaN    20.0    300.0       7.0  \n","1310        114.0       35.0      76.0   400.0    50.0    100.0       5.0  \n","1311         86.0       35.0      97.2     NaN     NaN     40.0       3.0  \n","1312         98.0       39.0      97.2   200.0    70.0    100.0       4.0  \n","1313        106.0       41.0      76.0   400.0    50.0    100.0       6.0  \n","\n","[1166 rows x 57 columns]"],"text/html":["\n","  <div id=\"df-707f41ee-9636-4162-afb6-2bae11e17975\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>weight</th>\n","      <th>sex</th>\n","      <th>height</th>\n","      <th>age</th>\n","      <th>Anestesia_TIME</th>\n","      <th>Operation_TIME</th>\n","      <th>UCI_TIME</th>\n","      <th>Survival Rate</th>\n","      <th>rr_mean</th>\n","      <th>...</th>\n","      <th>pip_max</th>\n","      <th>hr_max</th>\n","      <th>art_dbp_max</th>\n","      <th>art_mbp_max</th>\n","      <th>etco2_max</th>\n","      <th>fio2_max</th>\n","      <th>hs_max</th>\n","      <th>uo_max</th>\n","      <th>ebl_max</th>\n","      <th>peep_max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>192250700</td>\n","      <td>59.0</td>\n","      <td>F</td>\n","      <td>163.0</td>\n","      <td>65</td>\n","      <td>380.0</td>\n","      <td>340.0</td>\n","      <td>2345.0</td>\n","      <td>0</td>\n","      <td>9.519231</td>\n","      <td>...</td>\n","      <td>28.0</td>\n","      <td>108.0</td>\n","      <td>68.0</td>\n","      <td>88.0</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>700.0</td>\n","      <td>500.0</td>\n","      <td>500.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>144893612</td>\n","      <td>63.0</td>\n","      <td>M</td>\n","      <td>174.0</td>\n","      <td>40</td>\n","      <td>175.0</td>\n","      <td>140.0</td>\n","      <td>1930.0</td>\n","      <td>0</td>\n","      <td>15.027778</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>108.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41.0</td>\n","      <td>91.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>40.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>118515241</td>\n","      <td>46.0</td>\n","      <td>F</td>\n","      <td>146.0</td>\n","      <td>85</td>\n","      <td>180.0</td>\n","      <td>100.0</td>\n","      <td>3770.0</td>\n","      <td>0</td>\n","      <td>10.569444</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>114.0</td>\n","      <td>37.0</td>\n","      <td>NaN</td>\n","      <td>400.0</td>\n","      <td>120.0</td>\n","      <td>40.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>131682281</td>\n","      <td>56.0</td>\n","      <td>F</td>\n","      <td>156.0</td>\n","      <td>30</td>\n","      <td>195.0</td>\n","      <td>165.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.085714</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>74.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>35.0</td>\n","      <td>58.0</td>\n","      <td>550.0</td>\n","      <td>90.0</td>\n","      <td>150.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>192170760</td>\n","      <td>64.0</td>\n","      <td>F</td>\n","      <td>162.0</td>\n","      <td>35</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.596154</td>\n","      <td>...</td>\n","      <td>19.0</td>\n","      <td>88.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>550.0</td>\n","      <td>20.0</td>\n","      <td>150.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1309</th>\n","      <td>186132074</td>\n","      <td>49.0</td>\n","      <td>F</td>\n","      <td>146.0</td>\n","      <td>80</td>\n","      <td>185.0</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.565789</td>\n","      <td>...</td>\n","      <td>19.0</td>\n","      <td>76.0</td>\n","      <td>68.0</td>\n","      <td>106.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>300.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>1310</th>\n","      <td>192891843</td>\n","      <td>64.0</td>\n","      <td>F</td>\n","      <td>158.0</td>\n","      <td>50</td>\n","      <td>115.0</td>\n","      <td>85.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.847826</td>\n","      <td>...</td>\n","      <td>16.0</td>\n","      <td>108.0</td>\n","      <td>88.0</td>\n","      <td>114.0</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1311</th>\n","      <td>173675824</td>\n","      <td>75.0</td>\n","      <td>F</td>\n","      <td>160.0</td>\n","      <td>25</td>\n","      <td>115.0</td>\n","      <td>70.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.782609</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>100.0</td>\n","      <td>64.0</td>\n","      <td>86.0</td>\n","      <td>35.0</td>\n","      <td>97.2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>40.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1312</th>\n","      <td>178121234</td>\n","      <td>60.0</td>\n","      <td>M</td>\n","      <td>158.0</td>\n","      <td>70</td>\n","      <td>255.0</td>\n","      <td>215.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.673077</td>\n","      <td>...</td>\n","      <td>14.0</td>\n","      <td>64.0</td>\n","      <td>72.0</td>\n","      <td>98.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>200.0</td>\n","      <td>70.0</td>\n","      <td>100.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>1313</th>\n","      <td>173926023</td>\n","      <td>49.0</td>\n","      <td>F</td>\n","      <td>159.0</td>\n","      <td>45</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.730769</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>41.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>6.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1166 rows × 57 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-707f41ee-9636-4162-afb6-2bae11e17975')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-707f41ee-9636-4162-afb6-2bae11e17975 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-707f41ee-9636-4162-afb6-2bae11e17975');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-38c0a9ce-8211-4cad-a9f6-8720ee0ea718\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-38c0a9ce-8211-4cad-a9f6-8720ee0ea718')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-38c0a9ce-8211-4cad-a9f6-8720ee0ea718 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fefab350-2238-48e5-aa2e-286d85422127\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_concat_vitals')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fefab350-2238-48e5-aa2e-286d85422127 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_concat_vitals');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_concat_vitals"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df_filt1 = df_concat_vitals.fillna(0)\n","df_filt1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"XbTt7a5v60sk","executionInfo":{"status":"ok","timestamp":1728660737038,"user_tz":300,"elapsed":290,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"a3a9c9d5-2c20-4c88-be4d-ccf5adafde31"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      subject_id  weight sex  height  age  Anestesia_TIME  Operation_TIME  \\\n","2      192250700    59.0   F   163.0   65           380.0           340.0   \n","4      144893612    63.0   M   174.0   40           175.0           140.0   \n","5      118515241    46.0   F   146.0   85           180.0           100.0   \n","7      131682281    56.0   F   156.0   30           195.0           165.0   \n","8      192170760    64.0   F   162.0   35           125.0           100.0   \n","...          ...     ...  ..     ...  ...             ...             ...   \n","1309   186132074    49.0   F   146.0   80           185.0           115.0   \n","1310   192891843    64.0   F   158.0   50           115.0            85.0   \n","1311   173675824    75.0   F   160.0   25           115.0            70.0   \n","1312   178121234    60.0   M   158.0   70           255.0           215.0   \n","1313   173926023    49.0   F   159.0   45           125.0           100.0   \n","\n","      UCI_TIME  Survival Rate    rr_mean  ...  pip_max  hr_max  art_dbp_max  \\\n","2       2345.0              0   9.519231  ...     28.0   108.0         68.0   \n","4       1930.0              0  15.027778  ...     23.0   108.0          0.0   \n","5       3770.0              0  10.569444  ...     23.0   108.0         82.0   \n","7          0.0              0   9.085714  ...     15.0    74.0         82.0   \n","8          0.0              0   9.596154  ...     19.0    88.0          0.0   \n","...        ...            ...        ...  ...      ...     ...          ...   \n","1309       0.0              0  10.565789  ...     19.0    76.0         68.0   \n","1310       0.0              0   9.847826  ...     16.0   108.0         88.0   \n","1311       0.0              0  10.782609  ...     23.0   100.0         64.0   \n","1312       0.0              0  10.673077  ...     14.0    64.0         72.0   \n","1313       0.0              0   9.730769  ...     15.0   108.0         82.0   \n","\n","      art_mbp_max  etco2_max  fio2_max  hs_max  uo_max  ebl_max  peep_max  \n","2            88.0       35.0      95.0   700.0   500.0    500.0       5.0  \n","4             0.0       41.0      91.0   400.0    50.0     40.0       0.0  \n","5           114.0       37.0       0.0   400.0   120.0     40.0       1.0  \n","7           106.0       35.0      58.0   550.0    90.0    150.0       3.0  \n","8             0.0       35.0      95.0   550.0    20.0    150.0       0.0  \n","...           ...        ...       ...     ...     ...      ...       ...  \n","1309        106.0       39.0      97.2     0.0    20.0    300.0       7.0  \n","1310        114.0       35.0      76.0   400.0    50.0    100.0       5.0  \n","1311         86.0       35.0      97.2     0.0     0.0     40.0       3.0  \n","1312         98.0       39.0      97.2   200.0    70.0    100.0       4.0  \n","1313        106.0       41.0      76.0   400.0    50.0    100.0       6.0  \n","\n","[1166 rows x 57 columns]"],"text/html":["\n","  <div id=\"df-f44b7a08-3c91-4c85-8e87-0987f399ee88\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>weight</th>\n","      <th>sex</th>\n","      <th>height</th>\n","      <th>age</th>\n","      <th>Anestesia_TIME</th>\n","      <th>Operation_TIME</th>\n","      <th>UCI_TIME</th>\n","      <th>Survival Rate</th>\n","      <th>rr_mean</th>\n","      <th>...</th>\n","      <th>pip_max</th>\n","      <th>hr_max</th>\n","      <th>art_dbp_max</th>\n","      <th>art_mbp_max</th>\n","      <th>etco2_max</th>\n","      <th>fio2_max</th>\n","      <th>hs_max</th>\n","      <th>uo_max</th>\n","      <th>ebl_max</th>\n","      <th>peep_max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>192250700</td>\n","      <td>59.0</td>\n","      <td>F</td>\n","      <td>163.0</td>\n","      <td>65</td>\n","      <td>380.0</td>\n","      <td>340.0</td>\n","      <td>2345.0</td>\n","      <td>0</td>\n","      <td>9.519231</td>\n","      <td>...</td>\n","      <td>28.0</td>\n","      <td>108.0</td>\n","      <td>68.0</td>\n","      <td>88.0</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>700.0</td>\n","      <td>500.0</td>\n","      <td>500.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>144893612</td>\n","      <td>63.0</td>\n","      <td>M</td>\n","      <td>174.0</td>\n","      <td>40</td>\n","      <td>175.0</td>\n","      <td>140.0</td>\n","      <td>1930.0</td>\n","      <td>0</td>\n","      <td>15.027778</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>108.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>41.0</td>\n","      <td>91.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>40.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>118515241</td>\n","      <td>46.0</td>\n","      <td>F</td>\n","      <td>146.0</td>\n","      <td>85</td>\n","      <td>180.0</td>\n","      <td>100.0</td>\n","      <td>3770.0</td>\n","      <td>0</td>\n","      <td>10.569444</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>114.0</td>\n","      <td>37.0</td>\n","      <td>0.0</td>\n","      <td>400.0</td>\n","      <td>120.0</td>\n","      <td>40.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>131682281</td>\n","      <td>56.0</td>\n","      <td>F</td>\n","      <td>156.0</td>\n","      <td>30</td>\n","      <td>195.0</td>\n","      <td>165.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.085714</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>74.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>35.0</td>\n","      <td>58.0</td>\n","      <td>550.0</td>\n","      <td>90.0</td>\n","      <td>150.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>192170760</td>\n","      <td>64.0</td>\n","      <td>F</td>\n","      <td>162.0</td>\n","      <td>35</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.596154</td>\n","      <td>...</td>\n","      <td>19.0</td>\n","      <td>88.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>550.0</td>\n","      <td>20.0</td>\n","      <td>150.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1309</th>\n","      <td>186132074</td>\n","      <td>49.0</td>\n","      <td>F</td>\n","      <td>146.0</td>\n","      <td>80</td>\n","      <td>185.0</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.565789</td>\n","      <td>...</td>\n","      <td>19.0</td>\n","      <td>76.0</td>\n","      <td>68.0</td>\n","      <td>106.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>300.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>1310</th>\n","      <td>192891843</td>\n","      <td>64.0</td>\n","      <td>F</td>\n","      <td>158.0</td>\n","      <td>50</td>\n","      <td>115.0</td>\n","      <td>85.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.847826</td>\n","      <td>...</td>\n","      <td>16.0</td>\n","      <td>108.0</td>\n","      <td>88.0</td>\n","      <td>114.0</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1311</th>\n","      <td>173675824</td>\n","      <td>75.0</td>\n","      <td>F</td>\n","      <td>160.0</td>\n","      <td>25</td>\n","      <td>115.0</td>\n","      <td>70.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.782609</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>100.0</td>\n","      <td>64.0</td>\n","      <td>86.0</td>\n","      <td>35.0</td>\n","      <td>97.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1312</th>\n","      <td>178121234</td>\n","      <td>60.0</td>\n","      <td>M</td>\n","      <td>158.0</td>\n","      <td>70</td>\n","      <td>255.0</td>\n","      <td>215.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.673077</td>\n","      <td>...</td>\n","      <td>14.0</td>\n","      <td>64.0</td>\n","      <td>72.0</td>\n","      <td>98.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>200.0</td>\n","      <td>70.0</td>\n","      <td>100.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>1313</th>\n","      <td>173926023</td>\n","      <td>49.0</td>\n","      <td>F</td>\n","      <td>159.0</td>\n","      <td>45</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.730769</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>41.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>6.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1166 rows × 57 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f44b7a08-3c91-4c85-8e87-0987f399ee88')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f44b7a08-3c91-4c85-8e87-0987f399ee88 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f44b7a08-3c91-4c85-8e87-0987f399ee88');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-181e26f3-e596-4ffd-b77c-b538c792f753\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-181e26f3-e596-4ffd-b77c-b538c792f753')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-181e26f3-e596-4ffd-b77c-b538c792f753 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_42c5319a-1c52-4819-bdfc-ad1fb09c9cc7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_filt1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_42c5319a-1c52-4819-bdfc-ad1fb09c9cc7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_filt1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_filt1"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Supongamos que tu DataFrame se llama df\n","df_filt1['sex_encoded'] = df_filt1['sex'].map({'F': 0, 'M': 1})  # Codificar sex\n","df_filt1 = df_filt1.drop(columns=['sex'])\n"],"metadata":{"id":"3up5Ti3BjKcy","executionInfo":{"status":"ok","timestamp":1728660742295,"user_tz":300,"elapsed":410,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df_filt1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"R1XjQOA1Nay_","executionInfo":{"status":"ok","timestamp":1728660751218,"user_tz":300,"elapsed":340,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}},"outputId":"c8fc5cc6-3762-45f5-f27c-1b0c1f5d76e3"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      subject_id  weight  height  age  Anestesia_TIME  Operation_TIME  \\\n","2      192250700    59.0   163.0   65           380.0           340.0   \n","4      144893612    63.0   174.0   40           175.0           140.0   \n","5      118515241    46.0   146.0   85           180.0           100.0   \n","7      131682281    56.0   156.0   30           195.0           165.0   \n","8      192170760    64.0   162.0   35           125.0           100.0   \n","...          ...     ...     ...  ...             ...             ...   \n","1309   186132074    49.0   146.0   80           185.0           115.0   \n","1310   192891843    64.0   158.0   50           115.0            85.0   \n","1311   173675824    75.0   160.0   25           115.0            70.0   \n","1312   178121234    60.0   158.0   70           255.0           215.0   \n","1313   173926023    49.0   159.0   45           125.0           100.0   \n","\n","      UCI_TIME  Survival Rate    rr_mean   spo2_mean  ...  hr_max  \\\n","2       2345.0              0   9.519231   99.215190  ...   108.0   \n","4       1930.0              0  15.027778   95.000000  ...   108.0   \n","5       3770.0              0  10.569444   99.729730  ...   108.0   \n","7          0.0              0   9.085714  100.000000  ...    74.0   \n","8          0.0              0   9.596154   99.444444  ...    88.0   \n","...        ...            ...        ...         ...  ...     ...   \n","1309       0.0              0  10.565789   99.447368  ...    76.0   \n","1310       0.0              0   9.847826   99.375000  ...   108.0   \n","1311       0.0              0  10.782609   99.280000  ...   100.0   \n","1312       0.0              0  10.673077   99.849057  ...    64.0   \n","1313       0.0              0   9.730769   99.392857  ...   108.0   \n","\n","      art_dbp_max  art_mbp_max  etco2_max  fio2_max  hs_max  uo_max  ebl_max  \\\n","2            68.0         88.0       35.0      95.0   700.0   500.0    500.0   \n","4             0.0          0.0       41.0      91.0   400.0    50.0     40.0   \n","5            82.0        114.0       37.0       0.0   400.0   120.0     40.0   \n","7            82.0        106.0       35.0      58.0   550.0    90.0    150.0   \n","8             0.0          0.0       35.0      95.0   550.0    20.0    150.0   \n","...           ...          ...        ...       ...     ...     ...      ...   \n","1309         68.0        106.0       39.0      97.2     0.0    20.0    300.0   \n","1310         88.0        114.0       35.0      76.0   400.0    50.0    100.0   \n","1311         64.0         86.0       35.0      97.2     0.0     0.0     40.0   \n","1312         72.0         98.0       39.0      97.2   200.0    70.0    100.0   \n","1313         82.0        106.0       41.0      76.0   400.0    50.0    100.0   \n","\n","      peep_max  sex_encoded  \n","2          5.0            0  \n","4          0.0            1  \n","5          1.0            0  \n","7          3.0            0  \n","8          0.0            0  \n","...        ...          ...  \n","1309       7.0            0  \n","1310       5.0            0  \n","1311       3.0            0  \n","1312       4.0            1  \n","1313       6.0            0  \n","\n","[1166 rows x 57 columns]"],"text/html":["\n","  <div id=\"df-0c540db6-0eaa-4746-b24f-bbfdd0bf30a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>weight</th>\n","      <th>height</th>\n","      <th>age</th>\n","      <th>Anestesia_TIME</th>\n","      <th>Operation_TIME</th>\n","      <th>UCI_TIME</th>\n","      <th>Survival Rate</th>\n","      <th>rr_mean</th>\n","      <th>spo2_mean</th>\n","      <th>...</th>\n","      <th>hr_max</th>\n","      <th>art_dbp_max</th>\n","      <th>art_mbp_max</th>\n","      <th>etco2_max</th>\n","      <th>fio2_max</th>\n","      <th>hs_max</th>\n","      <th>uo_max</th>\n","      <th>ebl_max</th>\n","      <th>peep_max</th>\n","      <th>sex_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>192250700</td>\n","      <td>59.0</td>\n","      <td>163.0</td>\n","      <td>65</td>\n","      <td>380.0</td>\n","      <td>340.0</td>\n","      <td>2345.0</td>\n","      <td>0</td>\n","      <td>9.519231</td>\n","      <td>99.215190</td>\n","      <td>...</td>\n","      <td>108.0</td>\n","      <td>68.0</td>\n","      <td>88.0</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>700.0</td>\n","      <td>500.0</td>\n","      <td>500.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>144893612</td>\n","      <td>63.0</td>\n","      <td>174.0</td>\n","      <td>40</td>\n","      <td>175.0</td>\n","      <td>140.0</td>\n","      <td>1930.0</td>\n","      <td>0</td>\n","      <td>15.027778</td>\n","      <td>95.000000</td>\n","      <td>...</td>\n","      <td>108.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>41.0</td>\n","      <td>91.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>40.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>118515241</td>\n","      <td>46.0</td>\n","      <td>146.0</td>\n","      <td>85</td>\n","      <td>180.0</td>\n","      <td>100.0</td>\n","      <td>3770.0</td>\n","      <td>0</td>\n","      <td>10.569444</td>\n","      <td>99.729730</td>\n","      <td>...</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>114.0</td>\n","      <td>37.0</td>\n","      <td>0.0</td>\n","      <td>400.0</td>\n","      <td>120.0</td>\n","      <td>40.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>131682281</td>\n","      <td>56.0</td>\n","      <td>156.0</td>\n","      <td>30</td>\n","      <td>195.0</td>\n","      <td>165.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.085714</td>\n","      <td>100.000000</td>\n","      <td>...</td>\n","      <td>74.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>35.0</td>\n","      <td>58.0</td>\n","      <td>550.0</td>\n","      <td>90.0</td>\n","      <td>150.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>192170760</td>\n","      <td>64.0</td>\n","      <td>162.0</td>\n","      <td>35</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.596154</td>\n","      <td>99.444444</td>\n","      <td>...</td>\n","      <td>88.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>35.0</td>\n","      <td>95.0</td>\n","      <td>550.0</td>\n","      <td>20.0</td>\n","      <td>150.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1309</th>\n","      <td>186132074</td>\n","      <td>49.0</td>\n","      <td>146.0</td>\n","      <td>80</td>\n","      <td>185.0</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.565789</td>\n","      <td>99.447368</td>\n","      <td>...</td>\n","      <td>76.0</td>\n","      <td>68.0</td>\n","      <td>106.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>300.0</td>\n","      <td>7.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1310</th>\n","      <td>192891843</td>\n","      <td>64.0</td>\n","      <td>158.0</td>\n","      <td>50</td>\n","      <td>115.0</td>\n","      <td>85.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.847826</td>\n","      <td>99.375000</td>\n","      <td>...</td>\n","      <td>108.0</td>\n","      <td>88.0</td>\n","      <td>114.0</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1311</th>\n","      <td>173675824</td>\n","      <td>75.0</td>\n","      <td>160.0</td>\n","      <td>25</td>\n","      <td>115.0</td>\n","      <td>70.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.782609</td>\n","      <td>99.280000</td>\n","      <td>...</td>\n","      <td>100.0</td>\n","      <td>64.0</td>\n","      <td>86.0</td>\n","      <td>35.0</td>\n","      <td>97.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1312</th>\n","      <td>178121234</td>\n","      <td>60.0</td>\n","      <td>158.0</td>\n","      <td>70</td>\n","      <td>255.0</td>\n","      <td>215.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>10.673077</td>\n","      <td>99.849057</td>\n","      <td>...</td>\n","      <td>64.0</td>\n","      <td>72.0</td>\n","      <td>98.0</td>\n","      <td>39.0</td>\n","      <td>97.2</td>\n","      <td>200.0</td>\n","      <td>70.0</td>\n","      <td>100.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1313</th>\n","      <td>173926023</td>\n","      <td>49.0</td>\n","      <td>159.0</td>\n","      <td>45</td>\n","      <td>125.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>9.730769</td>\n","      <td>99.392857</td>\n","      <td>...</td>\n","      <td>108.0</td>\n","      <td>82.0</td>\n","      <td>106.0</td>\n","      <td>41.0</td>\n","      <td>76.0</td>\n","      <td>400.0</td>\n","      <td>50.0</td>\n","      <td>100.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1166 rows × 57 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c540db6-0eaa-4746-b24f-bbfdd0bf30a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c540db6-0eaa-4746-b24f-bbfdd0bf30a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c540db6-0eaa-4746-b24f-bbfdd0bf30a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3cb4beb8-b7ac-4723-925d-1912abb0a554\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3cb4beb8-b7ac-4723-925d-1912abb0a554')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3cb4beb8-b7ac-4723-925d-1912abb0a554 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3ce195de-172c-4732-ba10-09d5eafa8cdc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_filt1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3ce195de-172c-4732-ba10-09d5eafa8cdc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_filt1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_filt1"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# Exportar a un archivo CSV\n","df_filt1.to_csv('df_filt1.csv', index=False)"],"metadata":{"id":"iKk_B0FA7FH3","executionInfo":{"status":"ok","timestamp":1728660795973,"user_tz":300,"elapsed":351,"user":{"displayName":"Alexander Marlon Paredes Arellano","userId":"09472877760168545977"}}},"execution_count":27,"outputs":[]}]}